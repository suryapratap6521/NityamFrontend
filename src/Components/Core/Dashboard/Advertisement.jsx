import React, { useState, useEffect } from "react";
import { useDispatch, useSelector } from 'react-redux';
import { Link } from 'react-router-dom';
import { getAd } from '../../../services/operations/adApi';

const ad = [{ head: 'Book Your House Today!', subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore ', buttonLabel: 'Learn More' }, { head: 'Book Your House Today!', subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore ', buttonLabel: 'Learn More' }]
const Advertisements = () => {

    const dispatch = useDispatch();
    const adData = useSelector((state) => state.ad.allAds || []);
    // console.log("adData", Array.isArray(adData), adData.length, adData)

    return (
        <div className="w-full flex flex-col items-center sticky top-[130px]">

            <div className="flex items-center gap-1 w-full  max-w-64">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g clip-path="url(#clip0_26_139)">
                        <path d="M10.3157 5.08834C8.75964 2.79911 6.6814 1.58241 5.59305 2.3279C5.47321 2.4123 5.36907 2.51703 5.28536 2.63735C5.28536 2.64615 2.7658 7.74505 2.7658 7.74505L1.35921 8.69801C1.14327 8.8446 0.958336 9.03228 0.814958 9.25035C0.671581 9.46843 0.572572 9.71261 0.523589 9.96896C0.474606 10.2253 0.476607 10.4888 0.52948 10.7444C0.582352 10.9999 0.685059 11.2426 0.831733 11.4585L0.89503 11.5516C1.19151 11.9835 1.64629 12.2811 2.16075 12.3798C2.67521 12.4786 3.20786 12.3705 3.64316 12.0791L5.9025 15.4075C6.23481 15.8171 6.87305 16.225 7.66074 15.745C7.80029 15.6546 7.91932 15.5358 8.01017 15.3965C8.10103 15.2572 8.16168 15.1004 8.18822 14.9363C8.22004 14.773 8.21918 14.605 8.18568 14.442C8.15218 14.279 8.08671 14.1243 7.99305 13.9868L6.00272 11.0505C6.00272 11.0505 10.7078 10.676 10.7254 10.669C10.8723 10.6383 11.0115 10.5785 11.135 10.4932C11.6942 10.1134 11.8946 9.31691 11.7012 8.24966C11.5271 7.2668 11.0331 6.15384 10.3157 5.08834ZM1.40668 11.2053L1.34338 11.1121C1.24218 10.9631 1.17136 10.7956 1.13497 10.6192C1.09858 10.4428 1.09733 10.261 1.1313 10.0841C1.16527 9.90727 1.23379 9.73884 1.33294 9.58848C1.43208 9.43812 1.55991 9.3088 1.7091 9.2079L2.92404 8.38153L4.52756 10.7428L3.31261 11.5692C3.1636 11.6706 2.99607 11.7415 2.81961 11.7781C2.64315 11.8146 2.46122 11.816 2.28422 11.7822C2.10721 11.7484 1.93861 11.6801 1.78803 11.5811C1.63746 11.4821 1.50787 11.3544 1.40668 11.2053ZM7.48668 14.3332C7.58277 14.4762 7.61823 14.6514 7.58527 14.8205C7.55231 14.9896 7.45362 15.1387 7.31085 15.2352C7.16759 15.3313 6.99205 15.3668 6.82267 15.3339C6.65329 15.3009 6.50387 15.2022 6.40712 15.0593L4.15481 11.7415L5.0603 11.1261L5.29943 11.1068L7.48668 14.3332ZM5.10954 10.5037L3.36184 7.92966L5.02866 4.53098C5.19041 5.48571 5.66338 6.61977 6.41943 7.73274C7.17547 8.84571 8.05459 9.70373 8.88096 10.2066L5.10954 10.5037ZM10.2963 10.0941C9.45591 10.0396 8.088 9.09186 6.92932 7.38461C5.77063 5.67735 5.39437 4.06153 5.65283 3.25801C5.69951 3.10719 5.79265 2.97497 5.91895 2.88024C6.04526 2.78552 6.19827 2.73312 6.35613 2.73054C7.18954 2.73054 8.60844 3.68351 9.80052 5.43999C10.4722 6.42812 10.961 7.46197 11.0946 8.36571C11.3566 10.0941 10.2963 10.0941 10.2963 10.0941Z" fill="black" fill-opacity="0.9" />
                        <path d="M8.11793 5.1534C7.90256 5.11111 7.68091 5.11218 7.46596 5.15656C7.25101 5.20094 7.04707 5.28773 6.86606 5.41186C6.83269 5.43495 6.8042 5.46439 6.78221 5.49849C6.76023 5.53259 6.74517 5.57068 6.7379 5.6106C6.73064 5.65052 6.73131 5.69148 6.73987 5.73114C6.74843 5.7708 6.76473 5.80839 6.78782 5.84175C6.81091 5.87512 6.84034 5.90361 6.87444 5.9256C6.90854 5.94759 6.94664 5.96264 6.98656 5.96991C7.02648 5.97717 7.06743 5.9765 7.1071 5.96794C7.14676 5.95938 7.18434 5.94308 7.21771 5.91999C7.33235 5.84218 7.46119 5.78771 7.59688 5.75969C7.73257 5.73168 7.87245 5.73066 8.00853 5.7567C8.14462 5.78274 8.27424 5.83533 8.39 5.91147C8.50576 5.9876 8.60539 6.08579 8.6832 6.20043C8.76101 6.31507 8.81548 6.44392 8.8435 6.57961C8.87152 6.7153 8.87254 6.85518 8.84649 6.99126C8.82045 7.12735 8.76786 7.25697 8.69173 7.37273C8.61559 7.48849 8.5174 7.58812 8.40276 7.66593C8.34871 7.70326 8.30802 7.75691 8.28665 7.81903C8.26528 7.88114 8.26435 7.94847 8.284 8.01116C8.30365 8.07384 8.34285 8.12859 8.39585 8.16739C8.44886 8.2062 8.51289 8.22702 8.57859 8.22681C8.64126 8.22798 8.70273 8.20954 8.75441 8.17406C9.02788 7.98881 9.24022 7.72655 9.36452 7.42052C9.48882 7.11448 9.5195 6.77844 9.45265 6.45496C9.38581 6.13148 9.22446 5.83512 8.98904 5.60341C8.75363 5.37171 8.45474 5.21509 8.13023 5.1534H8.11793ZM10.6955 2.94857H10.7254C10.8015 2.94854 10.8749 2.9203 10.9314 2.86932C10.9879 2.81834 11.0235 2.74822 11.0313 2.67252L11.2687 0.365709C11.2741 0.324919 11.2713 0.283459 11.2604 0.243783C11.2495 0.204107 11.2307 0.167021 11.2052 0.134719C11.1797 0.102417 11.148 0.0755557 11.112 0.0557234C11.0759 0.0358911 11.0363 0.0234912 10.9953 0.0192572C10.9544 0.0150233 10.913 0.0190413 10.8737 0.0310736C10.8343 0.0431059 10.7978 0.062908 10.7662 0.0893084C10.7347 0.115709 10.7087 0.148171 10.6899 0.184775C10.6712 0.221378 10.6599 0.26138 10.6568 0.302412L10.4212 2.61098C10.4129 2.69212 10.4371 2.77325 10.4885 2.83655C10.5399 2.89985 10.6144 2.94014 10.6955 2.94857ZM14.6727 2.47384C14.6275 2.40574 14.5572 2.35828 14.4771 2.3418C14.3971 2.32533 14.3138 2.3412 14.2454 2.38593L12.1021 3.79252C12.0464 3.82927 12.0042 3.88311 11.9818 3.94592C11.9594 4.00874 11.958 4.07713 11.9779 4.14081C11.9977 4.20448 12.0377 4.25998 12.0918 4.29896C12.1459 4.33794 12.2112 4.35828 12.2779 4.35692C12.3401 4.35835 12.4013 4.34121 12.4538 4.30769L14.597 2.90109C14.6635 2.85431 14.7088 2.78312 14.723 2.70306C14.7371 2.62301 14.7191 2.5406 14.6727 2.47384ZM15.3285 6.22945L12.8353 5.78109C12.7548 5.76664 12.672 5.78473 12.6049 5.83139C12.5378 5.87804 12.4919 5.94945 12.4775 6.02988C12.463 6.11032 12.4811 6.19321 12.5278 6.26031C12.5744 6.32741 12.6458 6.37323 12.7263 6.38769L15.2177 6.83604H15.2722C15.3506 6.83833 15.4269 6.8106 15.4856 6.75851C15.5442 6.70642 15.5807 6.6339 15.5877 6.55578C15.5946 6.47766 15.5715 6.39983 15.523 6.33819C15.4745 6.27656 15.4043 6.23577 15.3267 6.22417L15.3285 6.22945Z" fill="black" fill-opacity="0.9" />
                    </g>
                    <defs>
                        <clipPath id="clip0_26_139">
                            <rect width="16" height="16" fill="white" />
                        </clipPath>
                    </defs>
                </svg>
                <h2 className="text-base font-light text-gray-600">Advertisement </h2>


            </div>
            {adData.slice(0, 2).map((ad, index) => (<>
                <div className="w-full max-w-64 mt-4">
                    <img className='bg-gray-400 w-full h-56 rounded-md' />
                    <h2 className="text-xl font-normal text-black mt-3">{ad.title}</h2>
                    <p className="text-gray-400 leading-4 text-sm">p</p>
                    <a href={ad.buttonLabel.value} target="_blank">
                        <button className="w-fit mt-2 p-2 text-[#4A00E0] text-sm px-8 rounded-md bg-[#4A00E020]">{ad.buttonLabel.type}</button>
                    </a>
                </div>
            </>))}
        </div>


    );
}

export default Advertisements;
